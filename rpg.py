# -*- coding: utf-8 -*-
"""jeu2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jz5Z9Fbz4h2yL9JutP6JqJEIHSFNtsqt
"""

#toutes les variables globales 

nomjoueur = ""

xpjoueur = 0
xpniveau = 45
niveaujoueur = 1
listexpniveau = [45, 65, 95]
niveau2 = False
niveau3 = False
niveau4 = False

pvmaxjoueur = 15

capacitésobtenables = [["furie", 4], ["vision laser", 6], ["colonnes de flammes", 6], ["coup d'estoc", 6],["coup réfléchi", 7], ["coup de l'ombre", 6], ["poignard dans le dos", 6] , ["voltige", 9], ["décapitation", 9], ["cassage de nuque", 10]]

inventairejoueur = []

script = ["C'est la panique : la princesse a disparu, le roi lance un appel : celui qui sauvera la princesse pourra devenir le prince et l'héritier du royaume."," ","Des inconnus en noirs pillent et détruisent ton petit village"," ", "En essayant de fuir tu te retrouves face à un brigand ", "à moitié mort, tu t'enerves et attaque de plus belle","Tu prends un coup derrière la tête et les brigands partent et te laisse pour mort ", "tu te réveilles et marche hors du village, tout le monde est mort.","Tu décides de retrouver les brigands et de te venger. ","Tu vas à la ville la plus proche dans une auberge pour te reposer et manger.", "3 ennemis rentre dans l’auberge ", "Les ennemis vaincus toute l’auberge t'acclames, la soirée continue. On t'informes de l’annonce du roi.", "Tu vas parler à quelqu’un ", "Les portes de l’auberge explosent, et une armée débarque et attaquent tout le monde", "un ennemi arrive tout en noir avec des yeux noirs", "les ennemis fuient car leurs chef est mort", "tu trouves un des brigands seul et blessé ", "Au bout d’un certain temps, tu tombes face à une bifurcation.", "Tu arrive dans un village pour te ressourcer et obtenir des informations","Tu rencontres un homme qui veut t'aider a tuer ces brigands qui ont tué sa famille", "le lendemain matin tu arrives à destination, tu te retrouves devant la porte secrète qui mène chez les brigands.", "Une phrase est écrite au dessus et finit par : prononcez la réponse et la porte s’ouvrira !", "Derrière la porte tu te retrouves nez à nez avec un homme gigantesque avec un énorme nez, malmenant la princesse.", "Une fois le boss vaincu tu sauves la princesse, la ramène au Roi, et ils se marient et ont plein d’enfant.", "Notre héros peut savourer sa vengeance en coulant des jours heureux."]
scriptprogression = 0
progressionjoueur = "phase1"

# [[[choix, conséquence], [choix, conséquence]], [[choix, conséquence], [choix, conséquence]]]
choix = [ [ ["aller parler au vieil homme barbu au grand chapeau", "choixmage"], ["aller parler au groupe de soldat", "choixsoldat"], ["aller parler à l’homme seul dans un coin avec une capuche sombre", "choixassassin"] ],[ ["De l'or à l'infini", False], ["Etre le plus fort et le plus beau", False], ["Établir la paix dans le royaume", True] , ["Vivre heureux pour toujours", False]],[ ["oui", True], ["non", False] ], [ ["parler au brigand", "choixparler"] , ["Tuer le brigand ", "choixtuer"], ["Torturer le brigand", "choixtorture"]], [ ["Passage avec un pont dans le brouillard", "choixpont"], ["Passage dans un chemin qui à l’air tranquille", "choixchemin"] ]  , [ ["Passage bloqué par un Orc", "choixorc"], ["Passage bloqué par des loups", "choixloups"] ], [ ["Suivre la voie du sage", "choixsage"],["Suivre la voie du berserker", "choixberserker"] ]  ]

# [[enigme, reponse], [enigme, reponse], [enigme, reponse]]
enigmes = [["Qu'est ce qui a 2 branches mais pas de feuille ?", "des lunettes"], ["Qu est-ce qui est né grand, et qui meurt petit ?", "une bougie"], ["Je suis insaisissable, parfois douce, parfois dangereuse, je suis banale et pourtant précieuse", "l'eau"]]

pvjoueur = 15

# listes ennemis : [ nomdelennemi, pv, xpqu'ilrapporte, [nomlootqu'ilrapporte, statlootqu'ilrapporte], [[nompremierecapacité, degatspremierecapacité], [nomdeuxiemecapacité, degatsdeuxiemecapacité]] ]
listeennemis = [["brigand lambda", 5, 10, ["boisson", 3, "heal"],[ ["coup de poing", 1], ["coup de pied", 2] ]  ], ["Groupe de brigands",7,15, ["pique", 6, "degat"],[ ["raffale de coups", 3], ["double charge", 4], ["coup de poings", 2] ]  ] , ["Groupe de brigands",6,15, ["Morceau de viande", 6, "heal"],[ ["coup de poing", 1], ["coup de couteau", 3], ["coup de pieds", 2] ]  ], ["Groupe d'ennemis",5,10, ["Alcool", 7, "heal"],[ ["charge groupée", 2], ["jet de chaises", 3], ["coup de poings", 2], ["jet de bouteille", 2] ]  ] , ["Chef des bandits",12,20, ["casque à pique", 10, "degat"],[ ["coup de masse", 4], ["ecrasement", 3], ["coup de poings", 3] ]  ], ["gredin",8,10, ["rien", 0],[ ["charge", 4], ["lancée de pierre", 3] , ["coup de poing", 2] ]  ], ["troll",11,30, ["viande de troll", 16, "heal"],[ ["coup de masse", 4], ["cri strident", 1] , ["coup de pied", 2] , ["coup de tête", 2] ]  ], ["orc",11,25, ["coude d'orc", 12, "heal"],[ ["pichnette", 3], ["morsure", 3] , ["cracha", 2] , ["coup de tête", 2] ]  ], ["loups",12 , 25, ["canine de loup", 12, "heal"],[ ["griffure", 3], ["morsure", 3] , ["charge", 2] ] ], ["boss brigand",26 , 20, ["r", 0, "heal"],[ ["coup de gourdin", 3], ["uppercut", 5] , ["laminage", 7] ] ]  ]  
#print(listeennemis[0]) # permet d'acceder à la liste du premier ennemi 
#print(listeennemis[0][4][0][1]) # permet d'acceder aux dégats ([1]) de la premiere capacité ([0]) la liste de capacités est le 5eme element de la liste de l'ennemi ([4]), c'est le premier ennemi ([0])

capacitésjoueur = [["coup de poing", 2],["coup de pieds", 3],["charge", 3]]

#sauvegardes
sauvegardeniveau2 = niveau2
sauvegardeniveau3 = niveau3
sauvegardeniveau4 = niveau4
sauvegardescriptprogression = scriptprogression
sauvegardelisteennemis = listeennemis
sauvegardniveaujoueur = niveaujoueur
sauvegardexpjoueur = xpjoueur
sauvegardepointsdevie = pvjoueur
sauvegardeinventaire = inventairejoueur
sauvegardecapacités = capacitésjoueur
sauvegardeennemis = listeennemis
sauvegardescript = script

#________________________________________________

# Fonction qui affiche le script 

def lirescript(): 
  print("")
  global scriptprogression
  print(script[scriptprogression])
  scriptprogression += 1

#________________________________________________

# fonction pour lire les énigmes

def enigme(enigme,bonnereponse):
  nbchance = 10
  print(enigme)
  print("quel est votre réponse ?")
  reponse = str(input())
  while reponse != bonnereponse: 
    print("Mauvaise réponse ! ")
    nbchance -= 1
    if nbchance == 0:
      return False 
    print("votre nombre de chances est", nbchance)
    reponse = str(input())
  return True


#________________________________________________


# Fonction choix 

def fairechoix(choix):
  i = 0
  # afficher les choix 
  while i < len(choix):
    print(i, ". ", choix[i][0])
    i += 1
  print("entrer le numero du choix que vous voulez faire")
  choixdujoueur = int(input())

  #forcer à rentrer un choix existant
  while choixdujoueur < 0 or choixdujoueur > len(choix) - 1:
    print("entrer le numero du choix que vous voulez faire")
    choixdujoueur = int(input())
    #envoyer la conséquence qui correspond au choix
  if choix[choixdujoueur][1] == "choixmage":
    choixmage()
    return
  if choix[choixdujoueur][1] == "choixsoldat":
    choixsoldat()
    return
  if choix[choixdujoueur][1] == "choixassassin":
    choixassassin()
    return
  if choix[choixdujoueur][1] == "choixparler":
    choixparler()
  if choix[choixdujoueur][1] == "choixtuer":
    choixtuer()
  if choix[choixdujoueur][1] == "choixtorture":
    choixtorture()
  if choix[choixdujoueur][1] == "choixpont":
    choixpont()
  if choix[choixdujoueur][1] == "choixchemin":
    choixchemin()
  if choix[choixdujoueur][1] == "choixorc":
    choixorc()
  if choix[choixdujoueur][1] == "choixloups":
    choixloups()
  if choix[choixdujoueur][1] == "choixsage":
    choixsage()
    return
  if choix[choixdujoueur][1] == "choixberserker":
    choixberserker()
    return
  return choixdujoueur
    
  
#________________________________________________

# fonction du loot

def gagnerloot(objet): #  parametre : quel loot 
  global inventairejoueur
  print("vous remportez", objet[0])
  if objet[0] != "rien":
    inventairejoueur.append(objet) 

#___________________________________________________________

# Fonction pour gagner de lxp

def gainxp(xpgagne):
  global niveaujoueur
  global xpjoueur
  global pvmaxjoueur

  xpjoueur += xpgagne
  print("+", xpgagne, "xp")
  print("vous avez", xpjoueur,"xp")
  if xpjoueur >= listexpniveau[0] and niveaujoueur < 2:
    print("vous passez au niveau 2")
    niveaujoueur += 1
    pvmaxjoueur += 2
    pvjoueur = pvmaxjoueur
    print("vos pv maximum sont =", pvmaxjoueur)
    print(" ")
    
  if xpjoueur >= listexpniveau[1] and niveaujoueur < 3:
    print("vous passez au niveau 3")
    niveaujoueur += 1
    pvmaxjoueur += 2
    pvjoueur = pvmaxjoueur
    print("vos pv maximum sont =", pvmaxjoueur)
    print(" ")


  if xpjoueur >= listexpniveau[2] and niveaujoueur < 4:
    print("vous passez au niveau 4")
    niveaujoueur += 1
    pvmaxjoueur += 3
    pvjoueur = pvmaxjoueur
    print("vos pv maximum sont =", pvmaxjoueur)
    print(" ")


#________________________________________________

# fonction de la sauvegarde 

def sauvegarder(): # parametre : point de vie du joueur, inventaire du joueur, capacités du joueur.
  global sauvegardeniveau2
  global niveau2
  global sauvegardeniveau3
  global niveau3
  global sauvegardeniveau4
  global niveau4
  global sauvegardescriptprogression
  global scriptprogression
  global sauvegardelisteennemis
  global listeennemis
  global sauvegardniveaujoueur
  global niveaujoueur
  global sauvegardexpjoueur
  global xpjoueur
  global sauvegardepointsdevie
  global pvjoueur
  global sauvegardeinventaire
  global inventairejoueur
  global sauvegardecapacités
  global capacitésjoueur
  global sauvegardeennemis
  global listeennemis
  global sauvegardescript
  global script

  sauvegardeniveau2 = niveau2
  sauvegardeniveau3 = niveau3
  sauvegardeniveau4 = niveau4
  sauvegardescriptprogression = scriptprogression
  sauvegardelisteennemis = listeennemis
  sauvegardniveaujoueur = niveaujoueur
  sauvegardexpjoueur = xpjoueur
  sauvegardepointsdevie = pvjoueur
  sauvegardeinventaire = inventairejoueur
  sauvegardecapacités = capacitésjoueur
  sauvegardeennemis = listeennemis
  sauvegardescript = script

#________________________________________________

# fonction du game over

def gameover():
  global sauvegardeniveau2
  global niveau2
  global sauvegardeniveau3
  global niveau3
  global sauvegardeniveau4
  global niveau4
  global sauvegardescriptprogression
  global scriptprogression
  global sauvegardelisteennemis
  global listeennemis
  global sauvegardniveaujoueur
  global niveaujoueur
  global sauvegardexpjoueur
  global xpjoueur
  global sauvegardepointsdevie
  global pvjoueur
  global sauvegardeinventaire
  global inventairejoueur
  global sauvegardecapacités
  global capacitésjoueur
  global sauvegardeennemis
  global listeennemis
  global sauvegardescript
  global script


  #niveau2 = sauvegardeniveau2 
  #niveau3 = sauvegardeniveau3
  #niveau4 = sauvegardeniveau4 
  #scriptprogression = sauvegardescriptprogression 
  #listeennemis = sauvegardelisteennemis 
  #niveaujoueur = sauvegardniveaujoueur 
  #xpjoueur = sauvegardexpjoueur 
  pvjoueur = sauvegardepointsdevie 
  #inventairejoueur = sauvegardeinventaire 
  #capacitésjoueur = sauvegardecapacités  
  #listeennemis = sauvegardeennemis 
  #script = sauvegardescript 
 

  print("game over, try again !") 
  print("retour au début !")
  #if scriptprogression == "phase1":
    #phase1()
    #phase2()
    #phase3()
    #phase4()
  #if scriptprogression == "phase2":
    #phase2()
    #phase3()
    #phase4()
  #if scriptprogression == "phase3":
    #phase3()
    #phase4()
  #if scriptprogression == "phase4":
    #phase4()
  # ajouter retour au debut de phase (relancer la fonction de la phase)
  
#________________________________________________

# fonction de l'inventaire 

def ouvririnventaire():
  global inventairejoueur
  global pvjoueur
  if len(inventairejoueur) == 0:
    return 0

  print("voici votre inventaire ")

  i = 0
  while i < len(inventairejoueur):
    print(i,".", inventairejoueur[i][0],",",inventairejoueur[i][2] ,":", inventairejoueur[i][1])
    i += 1
  
  print("entrer le chiffre correspondant pour utiliser un objet")
  print("entrer -1 pour quitter l'inventaire")
 
  choixinventaire = int(input())

  # redemander le choix du joueur si il n'est pas compris dans ceux proposés
  while choixinventaire < -1 or choixinventaire > len(inventairejoueur) :
    print("entrer le chiffre correspondant pour utiliser un objet")
    print("entrer -1 pour quitter l'inventaire")
    choixinventaire = int(input())
    
  #quitter la fonction si -1
  if choixinventaire == -1:
    return attaquejoueur()

  #envoyer l'objet choisi à la fonction utiliser()
  return utiliser(inventairejoueur[choixinventaire])

#________________________________________________

# fonction pour heal

def heal(nbpv):
  global pvjoueur
  pvjoueur += nbpv
  if pvjoueur > pvmaxjoueur:
    pvjoueur = pvmaxjoueur
  print("HEAL, pv = ", pvjoueur)

#________________________________________________


# fonction de l'utilisation d'objet 

def utiliser(objet): # parametre : objet choisi par l'utilisateur et ses caractéristique 
  global inventairejoueur 
  inventairejoueur.remove(objet) # supprimer l'objet de l'inventaire
  if objet[2] == "heal": 
    heal(objet[1])
    return 0
  if objet[2] == "degat":
    print(objet[1])
    return objet[1]


#________________________________________________

def menu():
  print("MENU")
  print("entrer une option")
  print("nouvelle partie")
  print("continuer")
  print("credit")
  print("quitter")
  choixmenu = input()
  if choixmenu == "continuer":
    return
  if choixmenu == "nouvelle partie":
    #TODO : reset toutes les stats
    phase1()
    phase2()
    phase3()
    phase4()
  if choixmenu == "quitter":
    quitter()
  if choixmenu == "credit":
    credit()
  
#________________________________________________

# fonction quitter le jeu

def quitter():
  print( "a quitter le jeu.")

#________________________________________________

# fonction lorsque on gagne une capacité 

def gagnercapacites(nouvellecapacité):
  print(" ")
  # si on a - de 4 capacités elle s'ajoute tte seule
  if len(capacitésjoueur) < 4 :
    print("Vous gagnez la capacité", nouvellecapacité[0])
    capacitésjoueur.append(nouvellecapacité)
  # si on a + de 4 capacités on a atteint le nombre max et il faut echanger contre une autre
  else :
    print("Vous gagnez la capacité", nouvellecapacité[0])
    print("vous avez atteint le nombre maximum de capacités, voulez-vous en echanger une contre", nouvellecapacité[0], "qui fait",nouvellecapacité[1], "dégats (oui ou non) ?" )
    i = 0
    veutechanger = str(input())
    while veutechanger != "oui" and veutechanger != "non":
      print("vous avez atteint le nombre maximum de capacités, voulez-vous en echanger une contre", nouvellecapacité[0], "qui fait",nouvellecapacité[1], "dégats (oui ou non) ?" )
      veutechanger = str(input())
    if veutechanger == "non":
      return
    else:
      while i < len(capacitésjoueur):
        print(i, ". echanger contre",  capacitésjoueur[i][0])
        i += 1
      choixcapacitésupprimer = str(input())
      while choixcapacitésupprimer != "0" and choixcapacitésupprimer != "1" and choixcapacitésupprimer != "2" and choixcapacitésupprimer != "3":
        choixcapacitésupprimer = str(input())
      else :
        capacitésjoueur[int(choixcapacitésupprimer)] = nouvellecapacité

#_______________________________________________________________________

#Listes des Fonctions appelées lorsque joueur fais un choix

def choixmage():
  print("Tu sympathises avec le vieil homme barbu. Il propose d’apporter son aide à ta vengeance : ")
  print("J’ai plusieurs objets magiques : Je te les donnent si tu trouves ce qu’ils sont en résolvant mon énigme :")
  reponse = enigme(enigmes[0][0], enigmes[0][1])
  if reponse == True :
    print("vous remporté les lunettes")
    gagnerloot(["lunettes magiques", 11, "heal"])
    gagnercapacites(capacitésobtenables[1])
  else:
    return False 
  reponse2 = enigme(enigmes[1][0], enigmes[1][1])
  if reponse2 == True : 
    print('vous remporté la bougie')
    gagnerloot(["bougie magique", 10, "degats"])
    gagnercapacites(capacitésobtenables[2])
  return True 

def choixsoldat():
  print("Tu sympathises avec le chef des soldats. Il propose d’apporter son aide à ta vengeance, il pose une question ")
  print("Si tu pouvais faire un voeux et un seul ça serait lequel ?")
  voeux = fairechoix(choix[1])
  if voeux == 2:
    print("le chef dit : Vous avez fait un choix honorable !")
    gagnercapacites(capacitésobtenables[3])
    gagnercapacites(capacitésobtenables[4])
    gagnerloot(["nectar de vie", 9, "heal"])
    return 
  if voeux != 2: 
    print("le chef dit : alors adieu !")
    return 

def choixassassin():
  print("Tu sympathises avec l'homme qui te revèle etre un assassin")
  print("D'un coup il sort sa main sale de sous sa cape et demande :")
  print("Voulez vous faire le pacte du sang ??!")
  reponse = fairechoix(choix[2])
  if reponse == 0:
    print('l assassin dit : nous sommes maintenant liés, je vais tout vous montrer')
    gagnercapacites(capacitésobtenables[5])
    gagnercapacites(capacitésobtenables[6])
    gagnerloot(["fleur démoniquae", 11, "heal"])
  if reponse != 0:
    print('l assassin dit : alors aurevoir !')
    return 

#___________________________________

def choixparler():
  print("le brigand te donnes le chemin de la base secrète")
  #ajouter truc gagné
  gagnercapacites(capacitésobtenables[7])

def choixtorture():
  print("tu roue le brigand de coup, il crie")
  print("il fini par te devoiler le chemin de la base secrète des brigands")
  # ajouter truc gagné
  gagnercapacites(capacitésobtenables[8])

def choixtuer():
  print("tu tues le brigand de sang-froid")
  print("sur lui tu trouves une carte menant à la base secrète des brigands")
  # ajouter truc gagné
  gagnercapacites(capacitésobtenables[9])

#___________________________________

def choixpont():
  print("tu passes tranquillement dans le brouillard et un grand soleil apparait de l'autre coté")

def choixchemin():
  print("tu aurais du te mefier... Il y a une drole d'atmosphère")
  print("Un troll surgit d'un buisson ! Il te saute dessus")
  combat(listeennemis[6])

#___________________________________

def choixorc():
  print("L'orc rugis")
  combat(listeennemis[7])
  
def choixloups():
  print("les loups hurlent à la lune") 
  combat(listeennemis[8])

#_________________________________________________________
def choixsage():
  global pvmaxjoueur
  print("Vous avez choisi la voie du sage")
  print("Vous recevez 5 pv en plus")
  pvmaxjoueur += 5
  print("pvmax = " + str(pvmaxjoueur))
  return

def choixberserker():
  print("Vous avez choisi la voie du berserker")
  print("Vous recevez 2 points d'attaque en plus")
  print("choisissez une capacité pour augmenter ses dégâts:")
  i = 0
  while i < len(capacitésjoueur):
    print(i, ". ", capacitésjoueur[i][0], "  ", "dégats =", capacitésjoueur[i][1])
    i+=1
  choixcapa = int(input())
  capacitésjoueur[choixcapa][1] += 2
  print(capacitésjoueur[choixcapa][0], "  ", "dégats =", capacitésjoueur[choixcapa][1])

#_________________________________________________________

#Fonctions combat : 

def attaquejoueur():
  print("choisissez une capacité :")
  i = 0
  #montrer les capacités 
  while i < len(capacitésjoueur):
    print(i, ". ", capacitésjoueur[i][0], "  ", "dégats =", capacitésjoueur[i][1])
    i+=1
  choixcapa = int(input())
  while choixcapa < 0 or choixcapa > len(capacitésjoueur) -1:
    choixcapa = int(input())
  #print("vous attaquez", capacitésjoueur[choixcapa][0], "!")
  return capacitésjoueur[choixcapa][1]

def attaqueennemi(ennemi):
  attaquedelennemi = random.choice(ennemi[4])
  print(ennemi[0], "attaque", attaquedelennemi[0])
  return attaquedelennemi[1]

def combat(ennemi):
  global pvjoueur
  print(ennemi[0], "vous attaque !")
  print("vous avez : ", pvjoueur, "pv")
  # tant que aucun des 2 n'est à 0 pv refaire un tour
  while ennemi[1] > 0 and pvjoueur > 0:
    # proposer d'ouvrir l'inventaire uniquement si il n'est pas vide
    if len(inventairejoueur ) > 0: 
      print("attaquer(1) ou ouvrir l'inventaire ?(2)")
      choixtour = input()
      if choixtour == "2":
        tourjoueur = ouvririnventaire()
      if choixtour == "1":
        tourjoueur = attaquejoueur()
    else:
      tourjoueur = attaquejoueur()

    tourennemi = attaqueennemi(ennemi)
    pvjoueur -= int(tourennemi)
    ennemi[1] -= int(tourjoueur)
    print("vous avez", pvjoueur, "pv")
    print(ennemi[0], "a", ennemi[1], "pv")
  if pvjoueur <= 0:
    gameover()
  if ennemi[1] <= 0:
    gagnerloot(ennemi[3])
    gainxp(ennemi[2])
    print("vous avez vaincu" , ennemi[0], "!")
    print("")
  
#____________________________________________________________________

  # algo random pour generer de l'aléatoire 
import  random 

# voir http://python-simple.com/python-modules-math/random.php

#____________________________________________________________________

# credit

def credit():
  print(" ")
  print("crédits")
  print(" ")
  print("Bravo !!!")
  print("ce jeu vous est proposé par :")
  print("Raphael Misaiphon : code & fonctions")
  print("Gabriel Piquet : story & variables")
  print("Antonin Juillard : code & fonctions")
  print("merci à vous d'avoir joué !!")
  
#____________________________________________________________________

#les phases de jeu

def phase1():
  lirescript()
  lirescript()
  lirescript()
  lirescript()
  lirescript()
  combat(listeennemis[0])
  combat(listeennemis[1])
  lirescript()
  heal(10)
  gagnercapacites(capacitésobtenables[0])
  combat(listeennemis[2])
  lirescript()

def phase2():
  progressionjoueur = "phase2"
  sauvegarder()
  lirescript()
  lirescript()
  lirescript()
  lirescript()
  combat(listeennemis[3])
  lirescript()
  lirescript()
  fairechoix(choix[0])
  lirescript()
  lirescript()
  combat(listeennemis[4])
  lirescript()

def phase3():
  progressionjoueur = "phase3"
  sauvegarder()
  lirescript()
  fairechoix(choix[3])
  lirescript()
  fairechoix(choix[4])
  fairechoix(choix[5])
  lirescript()
  heal(20)

def phase4():
  lirescript()
  progressionjoueur = "phase4"
  sauvegarder()
  fairechoix(choix[6])
  lirescript()
  lirescript()
  enigme(enigmes[2][0], enigmes[2][1])
  lirescript()
  combat(listeennemis[9])
  lirescript()
  lirescript()
  sauvegarder()
  credit()
  menu()

menu()